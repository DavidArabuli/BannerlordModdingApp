M&B Bannerlord modding tools

the goal is to give user ability to modify
- unit`s skill stats (like bow skill, riding etc)
- unit`s inventory (and equipped weapons and armor)

Requires:
I believe that most work on units can be done in spnpccharacters.xml 

Possible flow:
reading existing values from game xml file ->
-> creating data structure to store it -> 
-> pass data to form ->
-> render initial values and default inventories ->
-> gather data from inputs (*mb formdata API?*) ->
-> pack it for xml-js library, in a JSON form ->
-> JSON to xml conversion ->
-> download edited xml.

====
notes and issues so far:

14.04.2024.

Xml->JSON-xml conversion messes up comments, but 
overall it works, without major problems. Game is not crashing, and in-game values are updated successfully.


====

15.04.2024

basic structure for skill modification is created, culture divs populated with appropriate unit cards, with access to skills and other unit data.

to do:
Have to filter units without skills, also filter all the tournament units, smiths etc - all non-hirable units. They are not really needed and only make code convoluted later on.

19.04.2024
Skill editing works just fine, game recognizes changes etc.

20.04.2024
Item modding is trickier, than I thought. 
There are different cases:
 - EquipmentRoster as an array of "equipment"-s
 - EquipmentRoster with property of "equipment" (in cases, where there is only one set of equipment for unit)
 
->
 - unit having full set of items, plus horse and horse harness
 - unit having custom number of items. Not all armor, and not all weapons
 ->
 - items numbers (like item0, item3 etc) are not reliably representing item type (could be arrows, could shield or weapon. Sometimes can be ranged weapon, sometimes melee, no guarantees.)

21.04.2024
- One way to approach item modding, would be dynamically read and render all existing items. The problem is, that in some cases it would make impossible to add certain items, because there will be no inputs for them. So, if unit has 2 items (spear + sword)  , it would be impossible to add shield.

- one way to navigate around it, is to merge shields array with weapons array. 
- another approach, is to just render pre-defined number of inputs, regardless of what units uses currently, and then insert lacking elements into final XML file. 

Then the question is, what to do with units with multiple equipment sets. Should app check how many sets unit has and edit all of them at once? Or should it render more inputs for this kind of units, or even to be able to create extra equip.sets?
